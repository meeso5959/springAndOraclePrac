<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
			<!-- 1. org.mybatis.spring.SqlSessionTemplate -->
			<bean id="sqlSession"
				class="org.mybatis.spring.SqlSessionTemplate">
				<constructor-arg ref="sqlSessionFactory" />
			</bean>
		
			<bean id="sqlSessionFactory"
				class="org.mybatis.spring.SqlSessionFactoryBean">
				<property name="configLocation"
					value="classpath:mybatis-config.xml" />
				<property name="dataSource" ref="dataSource" />
			</bean>
			
				<mybatis-spring:scan base-package="ㅣ1.ㅣ2.ㅣ3.mappers" />	
				
				
			<bean id="realDataSource"
				class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
				<property name="driverClassName"
					value="oracle.jdbc.driver.OracleDriver" />
				<property name="url"
					value="jdbc:oracle:thin:@localhost:1521:korea" />
				<property name="username" value="lunchbox" />
				<property name="password" value="lunchbox" />
				
				<property name="defaultAutoCommit" value="false" />
			</bean>
				
			
			
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="realDataSource" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="[SQL] " />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true"
				rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
	
	<aop:config>
		<aop:pointcut
			expression="execution(* com.kh.bookmate..*ServiceImpl*.*(..))"
			id="serviceMethod" />
		<aop:advisor id="transactionAdvisor"
			pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
			
			
			<!-- 
			 DB정보를 자기는 datasource와 쿼리문을 작성하는 Mapper.xml이 있는 경로 설정하는 mapperLocations를 
		 포함하는 빈 객체 생성 (파일이 아무것도 가지고 있지 않다면 404 오류 뜨는거 유의하기 )-->
			
		<!-- <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="SqlSessionFactory">
		  <property name="dataSource" ref="dataSource"/>
		  <property value="classpath:mybatis-config.xml" name="configLocation" />
		  <property value="classpath:/mapper/*Mapper.xml" name="mapperLocations" />
		</bean>
		 -->
		<!--  DB정보를 자기는 datasource와 쿼리문을 작성하는 Mapper.xml이 있는 경로 설정하는 mapperLocations를 
		  포함하는 빈 객체를 가지는 sqlSessionTemplate 생성 <- 실제로 Mapper.java에서 주입을 통해 사용함 -->
		<!-- SqlSessionTemplate DB연결 & 종료 -->
		<!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		    <constructor-arg ref="sqlSessionFactory"></constructor-arg>
		</bean>
				 -->
</beans>
